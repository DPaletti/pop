[pop]
node_features = 6
edge_features = 14
agent_neighbourhood_radius = 1
decentralized = false
epsilon_beta_scheduling = true
enable_power_supply_modularity = true # rte community detection works only this way
manager_history_size = 1e5
manager_initialization_half_life = 26 # 2 * substations
agent_type = "uniform"
disabled_action_loops_length = 1
repeated_action_penalty = 0

[agent]
embedding = "egat_architecture_small"
advantage_stream = "advantage_stream_small"
value_stream = "value_stream_small"
learning_rate = 1e-2
learning_frequency = 32
target_network_weight_replace_steps = 500
gamma = 0.99
huber_loss_delta = 1.0
batch_size = 4

[agent.exploration]
method = "episodic_memory"
size = 1000
neighbors = 10
exploration_bonus_limit = 10

[agent.exploration.random_network_distiller]
network = "egat_architecture_very_very_small"
learning_rate = 1e-2

[agent.exploration.inverse_model]
embedding = "egat_architecture_very_very_small"
action_prediction_stream = "inverse_action_stream_very_small"
learning_rate = 1e-2

[agent.replay_memory]
alpha = 0.5
max_beta = 1.0
min_beta = 0.0
beta_decay = 200
capacity = 1000

[manager]
embedding = "egat_architecture_very_small"
advantage_stream = "advantage_stream_small"
value_stream = "value_stream_small"
learning_rate = 1e-2
learning_frequency = 32
target_network_weight_replace_steps = 500
gamma = 0.99
huber_loss_delta = 1.0
batch_size = 4

[manager.exploration]
method = "episodic_memory"
size = 1000
neighbors = 10
exploration_bonus_limit = 10

[manager.exploration.random_network_distiller]
network = "egat_architecture_very_very_small"
learning_rate = 1e-2

[manager.exploration.inverse_model]
embedding = "egat_architecture_very_very_small"
action_prediction_stream = "inverse_action_stream_very_small"
learning_rate = 1e-2

[manager.replay_memory]
alpha = 0.5
max_beta = 1.0
min_beta = 0.0
beta_decay = 200
capacity = 1000

[head_manager]
embedding = "gat_architecture_small"
advantage_stream = "advantage_stream_small"
value_stream = "value_stream_small"
learning_rate = 1e-2
learning_frequency = 32
target_network_weight_replace_steps = 500
gamma = 0.99
huber_loss_delta = 1.0
batch_size = 4

[head_manager.exploration]
method = "episodic_memory"
size = 1000
neighbors = 10
exploration_bonus_limit = 10

[head_manager.exploration.random_network_distiller]
network = "gat_architecture_very_small"
learning_rate = 1e-2

[head_manager.exploration.inverse_model]
embedding = "gat_architecture_very_small"
action_prediction_stream = "inverse_action_stream_very_small"
learning_rate = 1e-2

[head_manager.replay_memory]
alpha = 0.5
max_beta = 1.0
min_beta = 0.0
beta_decay = 200
capacity = 1000


